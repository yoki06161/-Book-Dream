# 어플리케이션 이름 설정: Book-Dream
spring.application.name=Book-Dream

# MySQL 데이터베이스 설정
# MySQL 데이터베이스 접속 URL (예시: jdbc:mysql://3.39.129.38(서버 ip):[포트번호]/[DB 이름])
spring.datasource.url=jdbc:mysql://3.39.129.38:3306/bookDream
# 데이터베이스 드라이버 클래스
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
# 데이터베이스 사용자 이름
spring.datasource.username=trade
# 데이터베이스 비밀번호
spring.datasource.password=trade

# JPA 설정
# Hibernate 사용 시 MySQL 데이터베이스 방언 설정
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# JPA가 데이터베이스 스키마를 자동으로 업데이트하도록 설정
spring.jpa.hibernate.ddl-auto=update

# SQL 로깅 설정
# SQL 쿼리를 포맷팅하여 출력
spring.jpa.properties.hibernate.format_sql=true
# Hibernate가 생성하는 SQL 쿼리를 출력
spring.jpa.properties.hibernate.show_sql=true

<<<<<<< HEAD
spring.jpa.open-in-view=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.use-new-id-generator-mappings=false

spring.jackson.serialization.fail-on-empty-beans=false


# Thymeleaf 템플릿 엔진 설정
spring.thymeleaf.prefix=classpath:templates/
spring.thymeleaf.check-template-location=true
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.cache=false
spring.thymeleaf.order=0

# REST API base path 설정
spring.data.rest.base-path=/api

# 외부 설정 파일 import
# spring.config.import=application-API-Key.properties

# OAuth2 설정
# OAuth2 클라이언트 설정 - Google
spring.security.oauth2.client.registration.google.client-id=1049238668917-kvvkfs8lstt1egcnft660s0dghff2mfh.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile

# OAuth2 클라이언트 설정 - Kakao
spring.security.oauth2.client.registration.kakao.client-id=3192757b80d5d97c7263b2166d1afd23
spring.security.oauth2.client.registration.kakao.client-secret=X3MSZpEkWr9VSuJzceo5cWy0fAUav5Hj
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image,account_email

# OAuth2 프로바이더 설정 - Kakao
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id




=======
# SMTP 서버 호스트
spring.mail.host=smtp.gmail.com
# SMTP 서버 포트
spring.mail.port=587
# SMTP 서버 로그인 아이디 (발신자)
spring.mail.username=bookdream@gmail.com
# SMTP 서버 로그인 패스워드 (앱 비밀번호)
spring.mail.password=qaiqsskvuwdxefdc
# 사용자 인증 시도 여부
spring.mail.properties.mail.smtp.auth=true
# SSL 활성화
spring.mail.properties.mail.smtp.ssl.enable=true
# StartTLS 활성화
spring.mail.properties.mail.smtp.starttls.enable=true


cos.key=cos1234

#iamport 결제기능 구현
imp.code = imp45767108
imp.api.key = 5147107512137784
imp.api.secretkey = 4wk5KrpOR2u3RCAtBalUmjRpu26EVTYnzOsMkVXyfjdYPrK8rFu19UCY3FZMkw9MjTZeYm9ScMSrkFUL 
